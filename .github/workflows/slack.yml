name: Professional PR Slack Notifications

on:
  pull_request:
    types: [opened, reopened, synchronize, review_requested, edited]

jobs:
  notify-slack:
    runs-on: ubuntu-latest
    steps:
      - name: Compose Slack message
        id: message
        run: |
          # Determine event type
          if [[ "${{ github.event.action }}" == "opened" ]]; then
            EVENT="New PR created"
          elif [[ "${{ github.event.action }}" == "reopened" ]]; then
            EVENT="PR reopened"
          elif [[ "${{ github.event.action }}" == "synchronize" ]]; then
            EVENT="PR updated with new commits"
          else
            EVENT="Review requested"
          fi

          echo "MESSAGE=$(cat <<EOF
          {
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Pull Request Activity: ${EVENT}",
                  "emoji": false
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Repository:*\n${GITHUB_REPOSITORY}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Branch:*\n${GITHUB_HEAD_REF}"
                  }
                ]
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*PR Title:*\n<${GITHUB_EVENT_PULL_REQUEST_HTML_URL}|${GITHUB_EVENT_PULL_REQUEST_TITLE}>"
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Author:*\n${GITHUB_EVENT_PULL_REQUEST_USER_LOGIN}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Changed Files:*\n${GITHUB_EVENT_PULL_REQUEST_CHANGED_FILES}"
                  }
                ]
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Review PR",
                      "emoji": false
                    },
                    "url": "${GITHUB_EVENT_PULL_REQUEST_HTML_URL}",
                    "style": "primary"
                  },
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Changes",
                      "emoji": false
                    },
                    "url": "${GITHUB_EVENT_PULL_REQUEST_HTML_URL}/files"
                  }
                ]
              }
            ]
          }
          EOF
          )" >> $GITHUB_OUTPUT

      - name: Send to Slack
        run: |
          curl -X POST \
          -H "Content-type: application/json" \
          --data "${{ steps.message.outputs.MESSAGE }}" \
          "${{ secrets.SLACK_WEBHOOK_URL }}"